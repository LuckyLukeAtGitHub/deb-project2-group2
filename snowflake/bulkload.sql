--THIS FILE IS NOT IN SNOWFLAKE YET

-- cheat code for convenience
USE ROLE SECURITYADMIN;
GRANT ROLE DBT_RW_P2_ TO ROLE ACCOUNTADMIN;

-- create file format in TVSHOW.util
USE ROLE SECURITYADMIN;
GRANT CREATE FILE FORMAT ON SCHEMA TVSHOW.UTIL TO ROLE DBT_RW_P2;

-- For CSV files, but not sure if we are going to use it
USE ROLE DBT_RW_P2;
USE TVSHOW.UTIL;
USE WAREHOUSE ETL_P2;
CREATE OR REPLACE FILE FORMAT CSV_P2
    TYPE = CSV 
    RECORD_DELIMITER = '\n'
    FIELD_DELIMITER = '|'
    FIELD_OPTIONALLY_ENCLOSED_BY = '"'
    SKIP_HEADER = 1;

CREATE OR REPLACE FILE FORMAT JSON_P2
    TYPE = JSON;

SHOW FILE FORMATS;

-- create storage integration (account level)
USE ROLE ACCOUNTADMIN;
CREATE OR REPLACE STORAGE INTEGRATION S3_P2
  TYPE = EXTERNAL_STAGE
  STORAGE_PROVIDER = S3
  ENABLED = TRUE
  STORAGE_AWS_ROLE_ARN = 'arn:aws:iam::855833069233:role/snowflake_role_p2'
  STORAGE_ALLOWED_LOCATIONS = ('s3://tvshow-p2/');
  

SHOW INTEGRATIONS;

DESCRIBE INTEGRATION S3_P2;

-- create stage in TVSHOW.util
USE ROLE SECURITYADMIN;
GRANT CREATE STAGE ON SCHEMA TVSHOW.UTIL TO ROLE DBT_RW_P2;
GRANT USAGE ON INTEGRATION S3_P2 TO ROLE DBT_RW_P2;

USE ROLE DBT_RW_P2;
USE WAREHOUSE ETL_P2;
USE SCHEMA TVSHOW.UTIL;

CREATE OR REPLACE STAGE S3_TVSHOW_CSV
  STORAGE_INTEGRATION = S3_P2
  URL = 's3://tvshow-p2/TVSHOW_csv/' --might not need this but we will have this for now
  FILE_FORMAT = TVSHOW.UTIL.CSV_P2;

LIST @TVSHOW.UTIL.S3_TVSHOW_CSV;

-- WILL DO WHEN WE HAVE THE SCHEMA AND TABLE NAME
-- copy data
-- CREATE OR REPLACE TABLE TVSHOW.SOURCE.DEPT_EMP
--  (emp_no varchar,
--  dept_no varchar,
--  from_date timestamp,
--  to_date timestamp
--  );


-- COPY INTO TVSHOW.SOURCE.DEPT_EMP
--   FROM @TVSHOW.UTIL.S3_TVSHOW_CSV/dept_emp.csv;

-- -- check
-- SELECT * FROM TVSHOW.SOURCE.DEPT_EMP LIMIT 10;
